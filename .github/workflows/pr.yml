name: pr

on: ["pull_request"]

jobs:
  build:
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    if: "!startsWith(github.head_ref, 'release/') || github.event.pull_request.head.fork"
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.14
        id: go
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Use Cache
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Get dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          go mod download
      - name: Run Test
        run: make test
      - name: Build
        run: |
          make build GOOS=linux GOARCH=amd64
          make build GOOS=darwin GOARCH=amd64
          make build GOOS=windows GOARCH=amd64
      - name: Save Artifact
        uses: actions/upload-artifact@v2
        with:
          name: binaries
          path: build/*/vsort*
  smoke-test:
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        include:
          - os: macos-latest
            osarch: darwin-amd64
            extention: ''
          - os: windows-latest
            osarch: windows-amd64
            extention: '.exe'
          - os: ubuntu-latest
            osarch: linux-amd64
            extention: ''
      fail-fast: false
    needs: [build]
    runs-on: "${{ matrix.os }}"
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: binaries
          path: binaries
      - name: Smoke Test
        run: |
          chmod a+x "binaries/vsort-${{ matrix.osarch }}/vsort${{ matrix.extention }}"
          binaries/vsort-${{ matrix.osarch }}/vsort${{ matrix.extention }} "-h"
  auto-merge:
    needs: [smoke-test]
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    steps:
      - name: Auto Merge
        if: contains(github.event.pull_request.body, '[auto merge]') && !contains(github.event.pull_request.title, '[WIP]') && !contains(github.event.pull_request.title, '[DNM]') && !github.event.pull_request.head.fork
        run: |
          # Request to merge button API
          hub api -X PUT /repos/${GITHUB_REPOSITORY}/pulls/${{ github.event.number }}/merge
